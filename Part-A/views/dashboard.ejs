<!DOCTYPE html>
<html lang="en">

<head>
    <title>flight_Bord</title>
    <link rel="shortcut icon" href="./icons/favicon.ico" />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--===============================================================================================-->
    <!-- <link rel="stylesheet" type="text/css" href="vendor/bootstrap/css/bootstrap.min.css">
    ===============================================================================================
    <link rel="stylesheet" type="text/css" href="fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    ===============================================================================================
    <link rel="stylesheet" type="text/css" href="vendor/animate/animate.css">
    ===============================================================================================
    <link rel="stylesheet" type="text/css" href="vendor/select2/select2.min.css">
    ===============================================================================================
    <link rel="stylesheet" type="text/css" href="vendor/perfect-scrollbar/perfect-scrollbar.css"> -->
    <!-- =============================================================================================== -->
    <link rel="stylesheet" type="text/css" href="style.css">
    
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>
    


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Reference to the Bing Maps SDK -->
    <script type='text/javascript'
        src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=Am7ABZsl1hVs093AjZV82C3wxd-NCQ-KtBLpdtv4uB1UBvqIx7vcgN7Dw1A9RpQt'
        async defer></script>



    <script type="text/javascript">
        function initSocket() {
            //socket is global
            socket = io.connect();
            alert("connected");
            setMap();
            startTime();
            init();
            
        }
        function sendMessage(total) {
            socket.emit("currentFlights",total);
        }


        var map = null;
        var counter = document.getElementById("counter");
        var count = 0;
        function setMap() {
            map = new Microsoft.Maps.Map(document.getElementById("myMap"), { credentials: "Aj-ABRf9OVQpNZTlbfu4v4yw8RWjR5Zl_XXEd0IUlAVAKKbg9vbr5ZCp6VvnLDTV" });
        }


        function add() {
            var rows = <%-JSON.stringify(data)%>;
            //document.getElementById('counter').innerHTML = 0; -->
            //count = 0;
            var rows1 = JSON.parse(rows);
            console.log(rows1);
            for (var key of Object.keys(rows1)) {
                //count++;
                //document.getElementById('counter').innerHTML = count;
                const myJSON = JSON.stringify(rows1[key]); 
                console.log(myJSON);
                const words = myJSON.split(',');
                var word = JSON.parse(words);
                var loc1 = new Microsoft.Maps.Location(word.location1, word.location2);
                var pin1 = new Microsoft.Maps.Pushpin(loc1);
                map.setView({ center: loc1, zoom: 4 });
                //map.entities.push(pin1);
                if(word.location3<90){
                    pin4 = new Microsoft.Maps.Pushpin(loc1, {
                        icon: "./icons/pl1.png",
                        anchor: new Microsoft.Maps.Point(10, 10)
                    });
                    map.entities.push(pin4);
                }
                else if(word.location3<180){
                    pin4 = new Microsoft.Maps.Pushpin(loc1, {
                        icon: "./icons/pl2.png",
                        anchor: new Microsoft.Maps.Point(10, 10)
                    });
                    map.entities.push(pin4);
                }
                else if(word.location3<270){
                    pin4 = new Microsoft.Maps.Pushpin(loc1, {
                        icon: "./icons/pl3.png",
                        anchor: new Microsoft.Maps.Point(10, 10)
                    });
                    map.entities.push(pin4);
                }
                else if(word.location3<360){
                    pin4 = new Microsoft.Maps.Pushpin(loc1, {
                        icon: "./icons/pl4.png",
                        anchor: new Microsoft.Maps.Point(10, 10)
                    });
                    map.entities.push(pin4);
                }
                
                var flight ={};
                flight.lo = word.location1;
                flight.lo2 = word.location2;
                flight.degree=word.location3;

                socket.emit("currentFlights", flight);

                var mongoData ={};
                mongoData.scheduleddeparture = word.scheduleddeparture;
                mongoData.lscheduledarrival = word.scheduledarrival;
                mongoData.realdeparture=word.realdeparture;
                mongoData.realarrival=word.realarrival;
                mongoData.estimateddeparture=word.estimateddeparture;
                mongoData.estimatedarrival=word.estimatedarrival;

                socket.emit("MachineLearning", mongoData);

              
            }
            
           
        }
    
        function move() {
            for (var i = map.entities.getLength() - 1; i >= 0; i--) {
                var pushpin = map.entities.get(i);
                if (pushpin instanceof Microsoft.Maps.Pushpin) {
                    map.entities.removeAt(i);
                }
            }
        }
        function init(){
            var rows = <%-JSON.stringify(data)%>;
            document.getElementById('counter').innerHTML = 0;
            count = 0;
            var rows1 = JSON.parse(rows);
            console.log(rows1);
            for (var key of Object.keys(rows1)) {
                count++;
                document.getElementById('counter').innerHTML = count;
            }
        }

    </script>
</head>
<body >    
<body  onload="initSocket()">

    <img id = "img-plane" src = "./icons/flights (1).png" width="155" alt="logo">
    <p class="borderexample"><a id ="txt"></></p>
    <div style=" position:unset" id="myMap"></div>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=Aj-ABRf9OVQpNZTlbfu4v4yw8RWjR5Zl_XXEd0IUlAVAKKbg9vbr5ZCp6VvnLDTV' async defer></script>
    <p class="borderexample2"><a class="textb2">טיסות ממתינות להמראה </bar><a class = "count" id = "counter"></p>
    <!-- <a class="borderexample" ><div class="textb2">טיסות ממתינות להמראה </div></bar><div class="numFlight"><div id = "counter"></div></a> -->

    <button id ="remove" onclick="move()" >הסר אייקונים</button>
    <button id ="add" onclick="add()" >הוסף אייקונים</button>
    
  
    <script>
    function startTime() {
      const today = new Date();
      let h = today.getHours();
      let m = today.getMinutes();
      let s = today.getSeconds();
      m = checkTime(m);
      s = checkTime(s);
      document.getElementById('txt').innerHTML =  h + ":" + m + ":" + s;
      setTimeout(startTime, 1000);
    }
    
    function checkTime(i) {
      if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
      return i;
    }
    </script>
    


</body>
   
</body>


</html>